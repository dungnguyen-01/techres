package vn.aloapp.training.springboot.controller;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import vn.aloapp.training.springboot.entity.Restaurant;
import vn.aloapp.training.springboot.entity.StoreProcedureListResult;
import vn.aloapp.training.springboot.request.CRUDRestaurantRequest;
import vn.aloapp.training.springboot.response.BaseResponse;
import vn.aloapp.training.springboot.response.RestaurantResponse;
import vn.aloapp.training.springboot.service.RestaurantService;

@RestController
@RequestMapping("/api/restaurants")
public class RestaurantController extends BaseController {
	@Autowired
	private RestaurantService restaurantService;

	@RequestMapping(value = "/create", method = RequestMethod.POST, produces = { MediaType.APPLICATION_JSON_VALUE })
	public ResponseEntity<BaseResponse> create(@Valid @RequestBody CRUDRestaurantRequest wrapper) throws Exception {
		BaseResponse response = new BaseResponse();

		Restaurant restaurant = restaurantService.spUCreateRestaurant(wrapper.getName(), wrapper.getEmail(),
				wrapper.getPhone(), wrapper.getInfo(), wrapper.getAddress(), wrapper.getLogo());

		response.setData(new RestaurantResponse(restaurant));

		return new ResponseEntity<BaseResponse>(response, HttpStatus.OK);
	}

	@RequestMapping(value = "", method = RequestMethod.GET, produces = { MediaType.APPLICATION_JSON_VALUE })
	public ResponseEntity<BaseResponse> getList() throws Exception {
		BaseResponse response = new BaseResponse();
		StoreProcedureListResult<Restaurant> restaurants = restaurantService.spGListRestaurants();
		response.setData(new RestaurantResponse().mapToList(restaurants.getResult()));
		return new ResponseEntity<BaseResponse>(response, HttpStatus.OK);
	}
}
